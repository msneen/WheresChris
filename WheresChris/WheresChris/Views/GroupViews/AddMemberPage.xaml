<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="WheresChris.Views.GroupViews.AddMemberPage"
             Title="{Binding Title}">
    <StackLayout>
        <RelativeLayout Padding="5,0,0,0" VerticalOptions="Start">
            <Button x:Name="ContactsListButton" AutomationId="ContactsListButton" Text="Contacts" Clicked="ContactsListButton_OnClicked" Style="{StaticResource buttonStyle}"  
                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0., Constant=0}"
                    RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=.45,Constant=0}"/>
            <Button x:Name="InviteListButton" AutomationId="InviteButton" Text="Invitees" Clicked="InviteListButton_OnClicked" Style="{StaticResource buttonStyle}"  
                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.55, Constant=0}"
                    RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.45,Constant=0}"/>
        </RelativeLayout>
        <RelativeLayout Padding="5,0,0,0" VerticalOptions="Start">
            <Entry x:Name="SearchEntry" AutomationId="SearchEntry" TextChanged="SearchEntry_OnTextChanged" Placeholder="Name or Phone Number"
                   RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=10}"
                   RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.9,Constant=0}"/>
            <Button x:Name="AddPhoneButton"  AutomationId="AddPhoneButton" Text="+" IsEnabled="False" Clicked="AddButton_OnClickedButton_OnClicked" Style="{StaticResource buttonStyle}"
                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.9, Constant=0}"
                    RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.1,Constant=0}" />
        </RelativeLayout>
        <ListView
            x:Name="ContactsListView"
            ItemsSource="{Binding Items, Mode=TwoWay}"
            HasUnevenRows="true"
            IsPullToRefreshEnabled="true"
            CachingStrategy="RetainElement"
            HorizontalOptions="FillAndExpand"
            VerticalOptions="FillAndExpand">
            <ListView.ItemTemplate>
            <DataTemplate>
                    <ViewCell>
                        <RelativeLayout BackgroundColor="{Binding BackgroundColor, Mode=TwoWay}" HeightRequest="50">
                            <RelativeLayout.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureRecognizer_OnTapped"></TapGestureRecognizer>
                            </RelativeLayout.GestureRecognizers>
                            <Label Text="{Binding Name}" Margin="0,15,0,0"
                                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.03, Constant=0}"
                                    RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=.67,Constant=0}"/>
                            <Label Text="{Binding PhoneNumber}" Margin="0,15,0,0"
                                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.7, Constant=0}"
                                    RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,Factor=0.3,Constant=0}" />
                        </RelativeLayout>
                    </ViewCell>
                </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
        <Button x:Name="AddButton" Text="Add" Clicked="AddButton_OnClicked" Style="{StaticResource buttonStyle}" />
    </StackLayout>
</ContentPage>
